
           zsh useage
           --------------------------------------------------

(c) 2015 Fri Nov  6 10:54:27 CST 2015 Daniel Kelly  <benh at kernel.crashing.org>,
    IBM Corp.



Shell是Linux/Unix的一个外壳，你理解成衣服也行。它负责外界与Linux内核的交互，接收用户或其他应用程序的命令，然后把这些命令转化成内核能理解的语言，传给内核，内核是真正干活的，干完之后再把结果返回用户或应用程序。

0.check

cat /etc/shells

1. install 

如果你用 Ubuntu Linux，执行：sudo apt-get install zsh


安装完成后设置当前用户使用 zsh：chsh -s /bin/zsh，根据提示输入当前用户的密码就可以了。
2. install oh my zsh

https://github.com/robbyrussell/oh-my-zsh

安装oh my zsh首先安装 git，安装方式同上，把 zsh 换成 git 即可。安装「oh my zsh」可以自动安装也可以手动安装。自动安装：

2.1 auto install
wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh

2.2 install from source 
git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc

3. usage
	3.1 math
		echo `expr 59189710 / 1024 / 1024`
	3.2 cat 
		cat /proc/net/dev
	3.2 cat 
		cat /sys/class/net/eth0/statistics/rx_bytes
	3.3 find the line started  with the specified word
		cat /proc/net/dev | grep "^  eth0"
	3.4 grep some word in finded files
		nux中find命令查找到文件后通过-exec参数执行shell命令，案例如下：
		#-exec   command   {} \;   将查到的文件执行command操作,{} 和 \;之间有空格
		find / -name filename -exec rm -rf {} \;
		#查找名字为filename的文件，然后执行rm删除命令
		Linux中grep命令查找到文件后通过|(管道符)传递给后面命令执行，案例如下：
		ls -l|grep filename|rm -rf
		#查找名字为filename的文件，然后执行rm删除命令


		find -name "" | xargs grep imx
	3.5 locate everything 
		/home/spirit/tmp/python_everything/found


4.find and grep 
	xargs结合grep：
	find . -name '*.txt' -type f -print0 |xargs -0 grep -n 'aaa'    #“-n”输出行号	

	find . -name '*imx6*' -type f -print0 |xargs -0 grep -in '95' --color


Why not simply use this:

find -name "*.xls" -o -name "*.csv"
You don't need regex for this.

If you absolutely want to use regex simply use

find -regex ".*\.\(xls\|csv\)"
find -regex ".*\.\(cpp\|h\)"

	5 export
		5.1 export 
		Linux export 命令

功能说明：设置或显示环境变量。（比如我们要用一个命令，但这个命令的执行文件不在当前目录，这样我们每次用的时候必须指定执行文件的目录，麻烦，在代码中先执行export，这个相当于告诉程序，执行某某东西时，需要的文件或什么东东在这些目录里）

语　　法：export [-fnp][变量名称]=[变量设置值]
#export PATH=$PATH:/opt/au1200_rm/build_tools/bin
export $PATH="$PATH:路径1:路径2:...:路径n” （或“PATH=$PATH:路径1:路径2:...:路径n"　），意思是可执行文件的路径包括原先设定的路径，也包括从“路径1”到“路径n”的所有路径。当用户输入一个一串字符并按回车后，shell会依次在这些路径里找对应的可执行文件并交给系统核心执行。那个“$PATH”表示原先设定的路径仍然有效，注意不要漏掉。某些软件可能还有“PATH”以外类型的环境变量需要添加，但方法与此相同，并且也需要注意“$”。

　　注意，与DOS/Window不同，UNIX类系统环境变量中路径名用冒号分隔，不是分号。另外，软件越装越多，环境变量越添越多，为了避免造成混乱，建议所有语句都添加在文件结尾，按软件的安装顺序添加。

	6. locate
		6.1  finding files on mounted disk with locate		
			/etc/updatedb.conf contains settings for what paths and file systems to prune (not index). Indeed I found my mount point among those paths, and upon removing it everything worked fine.
			Look at your /etc/updatedb.conf. It contains the PRUNEFS and PRUNEPATHS which might exclude your IDE drive. If it does, change that file so that it doesn't exclude your drive. And then run updatedb. If this doesn't work or you don't know what to change in that file, please include the line from mount that has your IDE drive, and the contents of /etc/updatedb.conf
			locate r  .*starter.*swf$
